extends layout

block content
    // Desktop Date Filter
    form(method='GET' action='/home' id='closing-by-date')
        table.center
            tr
                td From Date:
                td
                    input#fromclosingDate.form-control(type='date', name='fromClosingDate', value=fromClosingDate max=currentDate format="dd/mm/yyyy" required)
                td &nbsp;
                td To Date:
                td
                    input#toclosingDate.form-control(type='date', name='toClosingDate', value=toClosingDate max=currentDate format="dd/mm/yyyy" required)
                td &nbsp;
                td
                    button.btn.btn-primary(type='submit') Go
    // Mobile Date Filter (only visible on mobile)
    .date-filter-mobile
        form(method='GET' action='/home')
            table.center
                tr
                    td From Date:
                    td
                        input.form-control(
                            type='date', 
                            name='fromClosingDate', 
                            value=fromClosingDate 
                            max=currentDate 
                            required
                        )
                tr
                    td To Date:
                    td
                        input.form-control(
                            type='date', 
                            name='toClosingDate', 
                            value=toClosingDate 
                            max=currentDate 
                            required
                        )
                tr
                    td(colspan="2")
                        button.btn.btn-primary(type='submit') Go                
    div &nbsp;
    div.container-fluid
        if closingValues && closingValues.length > 0
            // Reverted back to simple table.table (like original)
            table.table.table-desktop(style="width:100% !important;")
                thead.thead-light
                    tr
                        th Date
                        th Closing ID
                        th Cashier
                        if productColumns && productColumns.length > 0
                            each column in productColumns
                                th= column.label
                        else
                            th MS
                            th HSD
                            th XMS
                            th 2T Loose
                        th Shortage/Excess
                        th Status
                        th Edit/View
                        th Delete
                tbody
                    each val in closingValues
                        tr(id=`closing-record-${val.closingId}`)
                            td
                                span= val.closingDate
                            td
                                span= val.closingId
                            td
                                span= val.cashierName
                            if productColumns && productColumns.length > 0
                                each column in productColumns
                                    td
                                        span= parseFloat(val[column.key] || 0).toFixed(2)
                            else
                                td
                                    span= val.msData || '0.00'
                                td
                                    span= val.hsdData || '0.00'
                                td
                                    span= val.xmsData || '0.00'
                                td
                                    span= val.l2tData || '0.00'
                            td
                                if val.expenseData && val.expenseData != 0
                                    if val.expenseData > 0
                                        strong.text-success= '+' + parseFloat(val.expenseData).toFixed(2)
                                    else
                                        strong.text-danger= parseFloat(val.expenseData).toFixed(2)
                                else
                                    strong.text-muted 0.00
                            td
                                if val.closingStatus === 'CLOSED'
                                    span.badge.badge-success Closed
                                else if val.closingStatus === 'DRAFT'
                                    span.badge.badge-warning Draft
                                else
                                    span.badge.badge-info= val.closingStatus
                            if (val.closingStatus === 'DRAFT')
                                td
                                    a.btn.btn-info(href='/edit-draft-closing?closingId='+val.closingId)
                                        span.oi.oi-pencil
                                if user.isAdmin
                                    td
                                        a.btn.btn-danger(onClick=`deleteClosing(${val.closingId})`)
                                            span.oi.oi-trash
                            if (val.closingStatus === 'CLOSED')
                                td
                                    a.btn.btn-info(href='/edit-draft-closing?closingId='+val.closingId)
                                        span.oi.oi-book
                                td &nbsp;
                    if closingValues.length > 1
                        tr.table-info
                            td.strong Total
                            td -
                            td -
                            if productColumns && productColumns.length > 0
                                each column in productColumns
                                    td
                                        - var total = 0
                                        each val in closingValues
                                            - total += parseFloat(val[column.key] || 0)
                                        strong= total.toFixed(2)
                            else
                                td
                                    - var msTotal = 0
                                    each val in closingValues
                                        - msTotal += parseFloat(val.msData || 0)
                                    strong= msTotal.toFixed(2)
                                td
                                    - var hsdTotal = 0
                                    each val in closingValues
                                        - hsdTotal += parseFloat(val.hsdData || 0)
                                    strong= hsdTotal.toFixed(2)
                                td
                                    - var xmsTotal = 0
                                    each val in closingValues
                                        - xmsTotal += parseFloat(val.xmsData || 0)
                                    strong= xmsTotal.toFixed(2)
                                td
                                    - var l2tTotal = 0
                                    each val in closingValues
                                        - l2tTotal += parseFloat(val.l2tData || 0)
                                    strong= l2tTotal.toFixed(2)
                            td -
                            td -
                            td -
                            td -

            // Mobile cards layout - ONLY visible on mobile
            .mobile-cards-container(style="display: none;")
                each val in closingValues
                    - var statusClass = val.closingStatus === 'DRAFT' ? 'draft' : 'closed'
                    .closing-card(class=statusClass)
                        .card-header-mobile
                            .card-id-title ##{val.closingId}
                            .card-status-badge(class=val.closingStatus === 'DRAFT' ? 'status-draft' : 'status-closed')= val.closingStatus

                        .card-row
                            .card-label Date
                            .card-value= val.closingDate

                        .card-row
                            .card-label Cashier
                            .card-value= val.cashierName

                        if productColumns && productColumns.length > 0
                            each column in productColumns
                                - var productValue = parseFloat(val[column.key] || 0)
                                if productValue > 0
                                    .card-row
                                        .card-label= column.label
                                        .card-value
                                            span.product-value= productValue.toFixed(2)
                        else
                            - var msVal = parseFloat(val.msData || 0)
                            if msVal > 0
                                .card-row
                                    .card-label MS
                                    .card-value
                                        span.product-value= msVal.toFixed(2)
                            - var hsdVal = parseFloat(val.hsdData || 0)
                            if hsdVal > 0
                                .card-row
                                    .card-label HSD
                                    .card-value
                                        span.product-value= hsdVal.toFixed(2)
                            - var xmsVal = parseFloat(val.xmsData || 0)
                            if xmsVal > 0
                                .card-row
                                    .card-label XMS
                                    .card-value
                                        span.product-value= xmsVal.toFixed(2)
                            - var l2tVal = parseFloat(val.l2tData || 0)
                            if l2tVal > 0
                                .card-row
                                    .card-label 2T Loose
                                    .card-value
                                        span.product-value= l2tVal.toFixed(2)

                        if val.expenseData && val.expenseData != 0
                            .card-row
                                .card-label Short/Excess
                                .card-value
                                    if val.expenseData > 0
                                        strong.text-success= '+' + parseFloat(val.expenseData).toFixed(2)
                                    else
                                        strong.text-danger= parseFloat(val.expenseData).toFixed(2)

                        .card-actions
                            if val.closingStatus === 'DRAFT'
                                a.action-btn.btn-edit(href=`/edit-draft-closing?closingId=${val.closingId}`) Edit
                                if user.isAdmin
                                    button.action-btn.btn-delete(onClick=`deleteClosing(${val.closingId})`) Delete
                            else
                                a.action-btn.btn-edit(href=`/edit-draft-closing?closingId=${val.closingId}`) View

        else
            div.row.bg-light No records to display.

        if user.isAdmin
            if draftsCnt < config.maxAllowedDrafts && draftDaysCnt <= 0
                form(method='GET' action='/new-closing' id='get-new-closing')
                    button.btn.btn-primary(type='button' onclick='getNewClosingPage()') Add New
            else if draftDaysCnt > 0
                pre.text-danger.bg-warning Note: Drafts are open for long. please close them to add new closing.
            else
                pre.text-danger.bg-warning Note: Cannot allow to add new closings, max #{config.maxAllowedDrafts} allowed drafts are met.

        if deadlineMessage && deadlineMessage.length > 0
            div.container-fluid
                h6.sub-header.bg-primary Important Deadlines
                table.table#deadlineWarning-table
                    thead.thead-light
                        tr
                            th Deadline Date
                            th Message
                    tbody
                        each val, index in deadlineMessage
                            tr(id="deadlineWarning_row_"+index)
                                td(scope="row")= val.deadlineDate
                                td(scope="row")= val.message
