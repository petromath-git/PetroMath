extends layout

block content
    form(method='POST' action='/reports-credit-ledger')
        script.
            
            // Javascript that gets table data
            var creditstmtFromServer = !{JSON.stringify(creditstmt)} 

                function renderTable(array, tabletitle, numberColumns = [], tableWidthClass = '') {
                    var result = "<table class='table table-bordered table-sm' style='width: 100%; border: 1px solid #000;'>";
                                
                    // If the array is not empty, add headers from the keys of the first object
                    if (array.length > 0 && typeof array[0] === 'object') {
                        result += "<thead class='thead-light text-center'><tr>";
                        Object.keys(array[0]).forEach(key => {                       
                            if (key !== 'companyName') {  // Skip companyName column in header
                                result += "<th style='border: 1px solid #000;'>" + key + "</th>"; 
                            }
                        });
                        result += "</tr></thead>";
                    }
                            
                    // Loop through the array to build table rows
                    result += "<tbody>";
                                
                    for (var i = 0; i < array.length; i++) {
                        let rowClass = '';  // Default row class (no styling)

                        // Check if it's the last row and contains "Total"
                        if (i === array.length - 1) {
                            let isTotalRow = Object.values(array[i]).some(value => value && 
                                (value.toString().toLowerCase().includes("total") || value.toString().toLowerCase().includes("excess"))
                            );

                            if (isTotalRow) {
                                rowClass = 'font-weight-bold text-danger'; 
                            }
                        }

                        result += "<tr>";                   
                        Object.keys(array[i]).forEach(key => {
                            if (key !== 'companyName') {  // Skip companyName column in row data
                                let dataValue = array[i][key];   
                                        
                                // Check if the current column should be formatted as a number
                                if (numberColumns.includes(key) && dataValue !== "" && !isNaN(dataValue)) {
                                    printedValue = new Intl.NumberFormat('en-IN', {
                                        style: 'decimal',                                                                
                                        minimumFractionDigits: 2,
                                        maximumFractionDigits: 2	
                                    }).format(dataValue); 

                                    result += "<td class='" + rowClass + " text-right' style='border: 1px solid #000;'>" + printedValue + "</td>";                                                 
                                }
                                else {
                                    result += "<td class='" + rowClass + " text-left' style='border: 1px solid #000;'>" + dataValue + "</td>";
                                }
                            }
                        });
                        result += "</tr>";
                    }
                    result += "</tbody>";
                    result += "</table>";
                    return result;
                }
                    


            document.addEventListener('DOMContentLoaded', function() {
                document.getElementById('dateRange').addEventListener('change', updateDateRange);               
                document.getElementById('creditstmt-table-container').innerHTML = renderTable(creditstmtFromServer,['Debit','Credit']);                               
                 
            });

        table.center
            tr
                td Date Range:
                td
                    select#dateRange.form-control(onchange="updateDateRange()")
                        option(value='this_month') This Month
                        option(value='last_month') Last Month
                        option(value='this_financial_year') This Financial Year
                        option(value='last_financial_year') Last Financial Year
                        option(value='custom', selected=true) Custom Date
                td &nbsp;                   
                td#fromDateLabel From Date:
                td
                    input#fromclosingDate.form-control(type='date', name='fromClosingDate', value=fromClosingDate, max=currentDate, format="dd/mm/yyyy", required)
                td &nbsp;                   
                td#toDateLabel To Date:
                td
                    input#toclosingDate.form-control(type='date', name='toClosingDate', value=toClosingDate, max=currentDate, format="dd/mm/yyyy", required)
                td &nbsp;
                td Company Name:
                td
                    select#company_id.form-control(name='company_id')
                        if credits                           
                            each val in credits
                                option(value=`${val.id}`, selected=company_id == val.id ? true : undefined)= val.name
                include report-print-download.pug
    div &nbsp;
    div
        if creditstmt && creditstmt.length > 0
            - var companyName = creditstmt[0].companyName
            - var cidparam = creditstmt[0].cidparam
            div.row.mt-3
            h6.font-weight-bold.text-center= "Credit Ledger Account"  
            h6.font-weight-bold.text-center.text-uppercase= companyName                 
            h6.text-center.text-muted= `${formattedFromDate}   to   ${formattedToDate}` 
            div.row
            div.col.text-right
                h6.font-weight-bold Opening Balance #{new Intl.NumberFormat('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(openingbalance)}
            div.row.mt-3    
            div.row        
            div.col-md-8
                div.row.mt-3                
                div(id="creditstmt-table-container")        
            if(cidparam != -1)                
                div.row
                div.col.text-right
                    h6.font-weight-bold Closing Balance #{new Intl.NumberFormat('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(closingbalance)}                
        else
            div.row.mt-3
            div.row.bg-light No Transactions.  

        // Include the overlay
        include overlay.pug

