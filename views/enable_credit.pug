extends layout
include mixins/mixins

block content
    // Alert for messages
    div#messageAlert.alert.alert-dismissible.fade(role="alert" style="display: none;")
        span#messageText
        button.close(type="button", data-dismiss="alert", aria-label="Close")
            span(aria-hidden="true") &times;
    
    // Sticky header
    .enable-customers-header-sticky
        .container-fluid
            .row.align-items-center.py-3
                .col
                    h4.mb-0.text-warning
                        i.bi.bi-exclamation-triangle.me-2
                        | Disabled Customers
                .col-auto
                    button.btn.btn-primary.btn-sm.me-2(type="button", onclick="window.location.href='/credit-master'")
                        i.bi.bi-arrow-left
                        span.d-none.d-md-inline.ms-1 Back to Customer Master
                        span.d-inline.d-md-none.ms-1 Back
                    button.btn.btn-info.btn-sm#refreshDataBtn(type="button")
                        i.bi.bi-arrow-clockwise
                        span.d-none.d-md-inline.ms-1 Refresh

    // Disabled customers content
    .enable-customers-container
        // Search Box
        .row.mb-3
            .col-12.col-md-6.col-lg-4
                .input-group
                    .input-group-prepend
                        span.input-group-text
                            i.bi.bi-search
                    input.form-control#searchInput(
                        type="text",
                        placeholder="Search by name, type, phone, GST...",
                        autocomplete="off"
                    )
                    .input-group-append
                        button.btn.btn-outline-secondary#clearSearch(type="button", style="display: none;")
                            i.bi.bi-x-circle
        
        if users && users.length > 0
            // Desktop table view
            .desktop-table-view.d-none.d-lg-block
                .table-responsive.table-desktop-container
                    table.table.table-hover.table-striped(id="disabled-customers-table")
                        thead.thead-dark.sticky-top
                            tr
                                th #
                                th Company Name
                                th Type
                                th Short Name
                                th Address
                                th Phone
                                th GST
                                th Actions
                        tbody
                            each val, index in users
                                tr(id=`disabled-customer-row-${index}`)
                                    th(scope="row")= index + 1
                                    td(scope="row")= val.name
                                    td(scope="row")
                                        span.badge(class=val.type === 'Credit' ? 'badge-primary' : 'badge-info')= val.type
                                    td(scope="row")= val.short_name || '-'
                                    td(scope="row")= val.address || '-'
                                    td(scope="row")= val.phoneno || '-'
                                    td(scope="row")= val.gst || '-'
                                    td(scope="row")
                                        button.btn.btn-success.btn-sm(type="button", onclick=`enableCustomer(${index}, ${val.id})`, title="Enable this customer")
                                            i.bi.bi-check-circle.me-1
                                            | Enable

            // Mobile cards view
            .mobile-cards-view.d-block.d-lg-none
                .row
                    each val, index in users
                        .col-12.mb-3
                            .card.disabled-customer-card.shadow-sm(id=`mobile-disabled-card-${index}`)
                                .card-header.bg-warning.text-white.d-flex.justify-content-between.align-items-center
                                    .customer-name
                                        strong= val.name
                                        span.badge.badge-light.ms-2(class=val.type === 'Credit' ? 'text-primary' : 'text-info')= val.type
                                    button.btn.btn-success.btn-sm(type="button", onclick=`enableCustomer(${index}, ${val.id})`)
                                        i.bi.bi-check-circle
                                .card-body.p-3
                                    .row.g-2
                                        .col-6
                                            .customer-detail
                                                small.text-muted Short Name
                                                div.fw-bold= val.short_name || '-'
                                        .col-6
                                            .customer-detail
                                                small.text-muted Phone
                                                div.fw-bold= val.phoneno || '-'
                                        .col-12
                                            .customer-detail
                                                small.text-muted Address
                                                div.fw-bold= val.address || '-'
                                        .col-6
                                            .customer-detail
                                                small.text-muted GST
                                                div.fw-bold= val.gst || '-'
        else
            .alert.alert-info.text-center.mt-4
                i.bi.bi-info-circle.me-2
                | No disabled customers found at this location.
                br
                small All customers are currently active.

    // CSS for mobile responsiveness and styling
    style.
        /* Sticky header for disabled customers */
        .enable-customers-header-sticky {
            position: sticky;
            top: 0;
            z-index: 1020;
            background: white;
            border-bottom: 2px solid #dee2e6;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-left: 0;
            margin-right: 0;
        }
        
        .enable-customers-container {
            padding-top: 15px;
        }
        
        /* Fix for sidebar layout */
        @media (min-width: 992px) {
            .enable-customers-header-sticky {
                margin-left: 260px;
            }
        }
        
        /* Mobile adjustments */
        @media (max-width: 991.98px) {
            .enable-customers-header-sticky {
                margin-left: 0;
            }
            
            .enable-customers-header-sticky h4 {
                font-size: 18px;
            }
            
            .desktop-table-view {
                display: none !important;
            }
            
            .mobile-cards-view {
                display: block !important;
            }
        }
        
        /* Desktop view */
        @media (min-width: 992px) {
            .desktop-table-view {
                display: block !important;
            }
            
            .mobile-cards-view {
                display: none !important;
            }
        }
        
        /* Disabled customer card styling */
        .disabled-customer-card {
            border-radius: 12px;
            border: 2px solid #ffc107;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }
        
        .disabled-customer-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }
        
        .disabled-customer-card .card-header {
            border-radius: 12px 12px 0 0 !important;
            background: linear-gradient(45deg, #ffc107, #ff9800) !important;
        }
        
        .customer-detail {
            margin-bottom: 8px;
        }
        
        .customer-detail small {
            display: block;
            font-size: 11px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 2px;
        }
        
        /* Table desktop container */
        .table-desktop-container {
            max-height: calc(100vh - 200px);
            overflow-y: auto;
        }
        
        /* Sticky table header */
        .table-desktop-container thead.sticky-top {
            position: sticky;
            top: 0;
            z-index: 10;
        }
        
        /* Badge styling */
        .badge-primary {
            background-color: #007bff;
        }
        
        .badge-info {
            background-color: #17a2b8;
        }
        
        /* Search box styling */
        #searchInput {
            border-radius: 0;
        }
        
        #searchInput:focus {
            box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
            border-color: #80bdff;
        }
        
        .input-group-text {
            background-color: #f8f9fa;
            border-right: 0;
        }
        
        #clearSearch {
            border-left: 0;
        }
        
        /* Search placeholder styling */
        #searchInput::placeholder {
            color: #6c757d;
            opacity: 0.8;
            font-style: italic;
        }
        
        /* Smooth transitions for search results */
        #disabled-customers-table tbody tr,
        .mobile-cards-view .col-12 {
            transition: opacity 0.2s ease;
        }

    // JavaScript
    script.
        function showMessage(message, type) {
            const alertDiv = document.getElementById('messageAlert');
            const messageText = document.getElementById('messageText');
            
            alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
            messageText.textContent = message;
            alertDiv.style.display = 'block';
            
            setTimeout(() => {
                alertDiv.classList.remove('show');
                setTimeout(() => {
                    alertDiv.style.display = 'none';
                }, 150);
            }, 3000);
        }
        
        function enableCustomer(index, customerId) {
            if (!confirm('Are you sure you want to enable this customer? They will be able to make purchases again.')) {
                return;
            }
            
            fetch(`/credit-master/enable/${customerId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showMessage('Customer enabled successfully', 'success');
                    
                    // Remove the row from desktop table
                    const desktopRow = document.getElementById(`disabled-customer-row-${index}`);
                    if (desktopRow) {
                        desktopRow.style.transition = 'opacity 0.3s';
                        desktopRow.style.opacity = '0';
                        setTimeout(() => desktopRow.remove(), 300);
                    }
                    
                    // Remove the card from mobile view
                    const mobileCard = document.getElementById(`mobile-disabled-card-${index}`);
                    if (mobileCard) {
                        mobileCard.style.transition = 'opacity 0.3s';
                        mobileCard.style.opacity = '0';
                        setTimeout(() => mobileCard.remove(), 300);
                    }
                    
                    // Check if all customers have been enabled
                    setTimeout(() => {
                        const remainingRows = document.querySelectorAll('[id^="disabled-customer-row-"]');
                        const remainingCards = document.querySelectorAll('[id^="mobile-disabled-card-"]');
                        
                        if (remainingRows.length === 0 && remainingCards.length === 0) {
                            location.reload();
                        }
                    }, 500);
                } else {
                    showMessage(data.error || 'Error enabling customer', 'danger');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showMessage('Error enabling customer: ' + error.message, 'danger');
            });
        }
        
        function refreshData() {
            location.reload();
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            // Auto-dismiss flash messages
            const pageAlerts = document.querySelectorAll('.alert:not(#messageAlert)');
            pageAlerts.forEach(alert => {
                setTimeout(() => {
                    alert.classList.remove('show');
                    setTimeout(() => alert.remove(), 150);
                }, 3000);
            });
            
            // Refresh button
            document.getElementById('refreshDataBtn').addEventListener('click', refreshData);
            
            // Search functionality
            const searchInput = document.getElementById('searchInput');
            const clearSearchBtn = document.getElementById('clearSearch');
            const desktopRows = document.querySelectorAll('#disabled-customers-table tbody tr');
            const mobileCards = document.querySelectorAll('.mobile-cards-view .card');
            
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase().trim();
                
                // Show/hide clear button
                clearSearchBtn.style.display = searchTerm ? 'block' : 'none';
                
                // Search in desktop table
                desktopRows.forEach(row => {
                    // Get all text content AND input values
                    const textContent = row.textContent.toLowerCase();
                    const allText = textContent;
                    
                    row.style.display = allText.includes(searchTerm) ? '' : 'none';
                });
                
                // Search in mobile cards
                mobileCards.forEach(card => {
                    // Get all text content
                    const textContent = card.textContent.toLowerCase();
                    
                    card.closest('.col-12').style.display = textContent.includes(searchTerm) ? '' : 'none';
                });
                
                // Show "no results" message if needed
                updateNoResultsMessage(searchTerm);
            });
            
            clearSearchBtn.addEventListener('click', function() {
                searchInput.value = '';
                searchInput.dispatchEvent(new Event('input'));
                searchInput.focus();
            });
            
            function updateNoResultsMessage(searchTerm) {
                // Remove existing message
                const existingMsg = document.getElementById('noResultsMessage');
                if (existingMsg) existingMsg.remove();
                
                if (!searchTerm) return;
                
                // Check if any results visible
                const visibleDesktop = Array.from(desktopRows).some(row => row.style.display !== 'none');
                const visibleMobile = Array.from(mobileCards).some(card => card.closest('.col-12').style.display !== 'none');
                
                if (!visibleDesktop && !visibleMobile) {
                    const noResultsHtml = `
                        <div id="noResultsMessage" class="col-12 text-center py-5">
                            <i class="bi bi-search" style="font-size: 3rem; color: #ccc;"></i>
                            <h5 class="text-muted mt-3">No disabled customers found</h5>
                            <p class="text-muted">Try adjusting your search terms</p>
                        </div>`;
                    
                    // Add to desktop view
                    const desktopContainer = document.querySelector('.desktop-table-view');
                    if (desktopContainer) {
                        desktopContainer.insertAdjacentHTML('beforeend', noResultsHtml);
                    }
                    
                    // Add to mobile view
                    const mobileContainer = document.querySelector('.mobile-cards-view .row');
                    if (mobileContainer) {
                        mobileContainer.insertAdjacentHTML('beforeend', noResultsHtml);
                    }
                }
            }
        });